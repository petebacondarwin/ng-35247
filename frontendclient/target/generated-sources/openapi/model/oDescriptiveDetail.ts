/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { List152 } from './list152';
import { List175 } from './list175';
import { OExtent } from './oExtent';
import { OSubject } from './oSubject';
import { OAudienceDescription } from './oAudienceDescription';
import { OEditionStatement } from './oEditionStatement';
import { OContributor } from './oContributor';
import { OComplexity } from './oComplexity';
import { OLanguage } from './oLanguage';
import { OReligiousText } from './oReligiousText';
import { OConference } from './oConference';
import { OEpubUsageConstraint } from './oEpubUsageConstraint';
import { List21 } from './list21';
import { List2 } from './list2';
import { OCollection } from './oCollection';
import { OEvent } from './oEvent';
import { List81 } from './list81';
import { OContributorStatement } from './oContributorStatement';
import { List80 } from './list80';
import { OTitleDetail } from './oTitleDetail';
import { List150 } from './list150';
import { OEpubLicense } from './oEpubLicense';
import { OProductClassification } from './oProductClassification';
import { OProductPart } from './oProductPart';
import { List144 } from './list144';
import { OAncillaryContent } from './oAncillaryContent';
import { List28 } from './list28';
import { OAudience } from './oAudience';
import { OMeasure } from './oMeasure';
import { ONameAsSubject } from './oNameAsSubject';
import { List12 } from './list12';
import { OProductFormFeature } from './oProductFormFeature';
import { List72 } from './list72';
import { OIllustrationsNote } from './oIllustrationsNote';
import { OAudienceRange } from './oAudienceRange';
import { List91 } from './list91';


export interface ODescriptiveDetail { 
    productComposition: List2;
    productForm: List150;
    productFormDetails?: Array<List175>;
    productFormFeatures?: Array<OProductFormFeature>;
    productPackaging?: List80;
    productFormDescriptions?: Array<string>;
    tradeCategory?: List12;
    primaryContentType?: List81;
    productContentTypes?: Array<List81>;
    measures?: Array<OMeasure>;
    countryOfManufacture?: List91;
    epubTechnicalProtections?: Array<List144>;
    epubUsageConstraints?: Array<OEpubUsageConstraint>;
    epubLicense?: OEpubLicense;
    mapScales?: Array<number>;
    productClassifications?: Array<OProductClassification>;
    productParts?: Array<OProductPart>;
    noCollection?: object;
    collections?: Array<OCollection>;
    titleDetails?: Array<OTitleDetail>;
    thesisType?: List72;
    thesisPresentedTo?: string;
    thesisYear?: string;
    noContributor?: object;
    contributors?: Array<OContributor>;
    contributorStatements?: Array<OContributorStatement>;
    conferences?: Array<OConference>;
    events?: Array<OEvent>;
    noEdition?: object;
    editionTypes?: Array<List21>;
    editionNumber?: number;
    editionVersionNumber?: string;
    editionStatements?: Array<OEditionStatement>;
    religiousText?: OReligiousText;
    languages?: Array<OLanguage>;
    extents?: Array<OExtent>;
    illustrated?: List152;
    numberOfIllustrations?: number;
    illustrationsNotes?: Array<OIllustrationsNote>;
    ancillaryContents?: Array<OAncillaryContent>;
    subjects?: Array<OSubject>;
    nameAsSubjects?: Array<ONameAsSubject>;
    audienceCodes?: Array<List28>;
    audiences?: Array<OAudience>;
    audienceRanges?: Array<OAudienceRange>;
    audienceDescriptions?: Array<OAudienceDescription>;
    complexities?: Array<OComplexity>;
}

