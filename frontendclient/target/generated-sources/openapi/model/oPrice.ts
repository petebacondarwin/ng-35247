/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { List174 } from './list174';
import { OEpubLicense } from './oEpubLicense';
import { List142 } from './list142';
import { OPriceCondition } from './oPriceCondition';
import { List144 } from './list144';
import { OPriceDate } from './oPriceDate';
import { OTerritory } from './oTerritory';
import { OPriceConstraint } from './oPriceConstraint';
import { List58 } from './list58';
import { List57 } from './list57';
import { List59 } from './list59';
import { ODiscount } from './oDiscount';
import { List61 } from './list61';
import { List60 } from './list60';
import { List96 } from './list96';
import { OComparisonProductPrice } from './oComparisonProductPrice';
import { OTax } from './oTax';
import { OBatchBonus } from './oBatchBonus';
import { OPriceCoded } from './oPriceCoded';
import { OPriceIdentifier } from './oPriceIdentifier';
import { List172 } from './list172';
import { ODiscountCoded } from './oDiscountCoded';


export interface OPrice { 
    priceIdentifiers?: Array<OPriceIdentifier>;
    priceType?: List58;
    priceQualifier?: List59;
    epubTechnicalProtections?: Array<List144>;
    priceConstraints?: Array<OPriceConstraint>;
    epubLicense?: OEpubLicense;
    priceTypeDescriptions?: Array<string>;
    pricePer?: List60;
    priceConditions?: Array<OPriceCondition>;
    minimumOrderQuantity?: number;
    batchBonuses?: Array<OBatchBonus>;
    discountCodeds?: Array<ODiscountCoded>;
    discounts?: Array<ODiscount>;
    priceStatus?: List61;
    unpricedItemType?: List57;
    priceCoded?: OPriceCoded;
    priceAmount?: number;
    taxExempt?: object;
    taxes?: Array<OTax>;
    currencyCode?: List96;
    territory?: OTerritory;
    currencyZone?: List172;
    comparisonProductPrices?: Array<OComparisonProductPrice>;
    priceDates?: Array<OPriceDate>;
    printedOnProduct?: List174;
    positionOnProduct?: List142;
}

